---------------------------20180401----------------------------------------------
1.在调试过程中，我希望<退回到前面的版本>运行，以便观察改动使程序运行发生了怎样的变化。
    在20180331的研究中的办法不够简洁安全。实践中发现，更好的办法。
    为了在退回过程中不丢失当前分支的工作，
        首先commit
        ，然后checkout new branch(命名为newBranchfromOldA吧)
        ，此时current自动切换到newBranchOldA
        ，在此基础上，通过菜单的Reset HEAD选项，reset type 选择hard
            ，commit to 填写目的commit的hash(或缩写)
            ，这样间接实现了在早先的commit上建立新branch
        ，最后如果需要，通过菜单的branch选项checkout(切换)到之前的master(也就是future)分支
---------------------------20180401----------------------------------------------
---------------------------20180331----------------------------------------------
<从早先的commit(早于当前head)创建新分支> ---- SF:我个人应用git reset的具体实践
   ·REMARK:在20180401的研究中有更便捷的方法
    a.所有操作限制在pycharm IDE的环境下
    b.不管是git console或者pycharm git环境下，git checkout 命令都是默认在当前branch
    的当前节点创建新分支。git console我不知道是否有特别的命令可以指定从某个从前的commit
    开始创建分支，pycharm git我没找到相应的选项。因此我这里借用了git reset的一点小技巧
    实现了从之前的某个commit创建分支。
    c.需求起因：在调试过程中，我希望<退回到前面的版本>运行，
        以便观察改动使程序运行发生了怎样的变化。
    d.提示：此操作有风险，需谨慎
        ·从早先的commit创建新分支
            ·把当前工作commit，防止未commit的代码在混乱的操作中丢失。
            ·记录下当前分支(就叫future branch吧)的hash，为了后面还原回来。
            ·假设希望从前面的commit(就叫oldA branch)创建一个新分支
                从git菜单栏找到Reset HEAD，弹出框中reset type栏选hard，
                to commit栏填写oldA branch的hash(可以填前七位缩写)
            ·从git菜单栏选择branch，选择新建分支，填写分支名称branchFromOld
                至此完成在早先commit创建分支的目的。
            ·找回future commit，从git菜单栏找到Reset HEAD，弹出框中reset type栏选hard，
                to commit栏填写future branch的hash(可以填前七位缩写)
---------------------------20180331----------------------------------------------
